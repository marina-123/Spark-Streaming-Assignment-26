import org.apache.spark.{SparkConf, SparkContext}
	import org.apache.spark.streaming.{Seconds, StreamingContext}
	import scala.collection.mutable.ArrayBuffer
	

	object Scala_bad_words {
	

	  //ArrayBuffer to store list of offensive words in memory
	  val wordList: ArrayBuffer[String] = ArrayBuffer.empty[String]
	

	  def main(args: Array[String]) {
	    println("hey Scala, Streaming Offensive Words!")
	

	    //Let us create a spark session object
	    val conf = new SparkConf().setMaster("local[2]").setAppName("SparkSteamingOffensiveWords")
	    val sc = new SparkContext(conf)
	

	    sc.setLogLevel("WARN")
	    println("Spark Session Object Created!")
	

	    val OffensiveWordList: Set[String] = Set("idiot","fool","bad","nonsense","shit","damn","stupid","dash","bloody","rascal")
	    println(s"$OffensiveWordList")
	

	    //Create the context with a 30 second batch size
	    println("hey Spark Streaming!")
	    val ssc = new StreamingContext(sc, Seconds(20))
	    println("Spark Streaming Context Created!")
	

	    val lines = ssc.socketTextStream("localhost", 9999)
	    val wordCounts = lines.flatMap(_.split(" "))
	      .map(x => x)
	      .filter(x => OffensiveWordList.contains(x.toLowerCase))
	      .map(x => (x, 1))
	      .reduceByKey(_ + _)
	    wordCounts.print()
	

	    ssc.start()
	    ssc.awaitTermination()
	  }
	}

